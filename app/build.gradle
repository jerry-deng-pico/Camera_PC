apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.example.camera_pc"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "com.quickbirdstudios:yuvtomat:1.1.0"  // ImageReader.Format.YUV_420_888 to cv::Mat
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31" // 上面的库是Kotlin的，所以要安装这个
    implementation 'androidx.exifinterface:exifinterface:1.1.0-beta01'  // 用来读取图片配置信息的
    implementation fileTree(include:'native-libs.jar',dir:"$buildDir/native-libs")
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':openCVLibrary346')
}
task nativeLibsTojar(type: Jar,description:'create a jar archive of the native libs') {

    destinationDir file("$buildDir/native-libs")

    baseName'native-libs'

    from fileTree(dir:'libs',include:'**/*.so')

    into'lib/'

}

tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {

    compileTask -> compileTask.dependsOn(nativeLibsTojar)

}
